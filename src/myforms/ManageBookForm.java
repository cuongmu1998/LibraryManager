package myforms;

import dao.impl.AuthorDAOImpl;
import dao.impl.BookDAOImpl;
import dao.impl.CategoryDAOImpl;
import entities.Author;
import entities.Book;
import entities.Category;
import java.awt.Color;
import java.awt.Font;
import java.awt.HeadlessException;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;
import myclasses.FunctionClass;

/**
 *
 * @author hieu0
 */
public class ManageBookForm extends javax.swing.JFrame {

    /**
     * Creates new form ManageGenresForm
     */
    DefaultTableModel dftbl;

    public ManageBookForm() {
        initComponents();
        //dftbl = (DefaultTableModel) jTable_User_.getModel();
        // center the form
        this.setLocationRelativeTo(null);

        //display image on the top
        myclasses.FunctionClass func = new FunctionClass();
        func.displayImage(75, 60, "/my_images/user.png", jLabel_FormTitle);

        // add a gray border to the Jpanel
        Border panelHeaderBorder = BorderFactory.createMatteBorder(3, 3, 3, 3, new Color(89,228,117));
        jPanel1.setBorder(panelHeaderBorder);

        //customize the Jtable
        jTable_Book_.setSelectionBackground(new Color(249, 105, 14));
        jTable_Book_.setSelectionForeground(Color.white);
        jTable_Book_.setRowHeight(25);
        //jTable_Genres.setShowGrid(true);
        jTable_Book_.setBackground(new Color(248, 248, 248));

        //customize the Jtable header row
        jTable_Book_.getTableHeader().setBackground(new Color(42, 187, 155));
        jTable_Book_.getTableHeader().setForeground(Color.black);
        jTable_Book_.getTableHeader().setFont(new Font("Vardana", Font.BOLD, 13));
        jTable_Book_.getTableHeader().setOpaque(false);

        //Refresh table
        populateJTableWithBook();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel_FormTitle = new javax.swing.JLabel();
        jLabel_CloseForm = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_Id = new javax.swing.JTextField();
        jButton_Add_ = new javax.swing.JButton();
        jButton_Edit_ = new javax.swing.JButton();
        jButton_Delete_ = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_Book_ = new javax.swing.JTable();
        jButton_FindById_ = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_Name = new javax.swing.JTextField();
        txt_Publisher = new javax.swing.JTextField();
        txt_PublishYear = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        combo_Genre = new javax.swing.JComboBox<>();
        jButton_FindByName_ = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        combo_Author = new javax.swing.JComboBox<>();
        txt_Quantity = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel_FormTitle.setBackground(new java.awt.Color(89, 228, 117));
        jLabel_FormTitle.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel_FormTitle.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_FormTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_FormTitle.setText("       Manage Books");
        jLabel_FormTitle.setOpaque(true);

        jLabel_CloseForm.setBackground(new java.awt.Color(89, 228, 117));
        jLabel_CloseForm.setFont(new java.awt.Font("Verdana", 0, 36)); // NOI18N
        jLabel_CloseForm.setForeground(new java.awt.Color(255, 0, 0));
        jLabel_CloseForm.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_CloseForm.setText("x");
        jLabel_CloseForm.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel_CloseForm.setOpaque(true);
        jLabel_CloseForm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_CloseFormMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("ID:");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Book Name:");

        txt_Id.setEditable(false);
        txt_Id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_IdActionPerformed(evt);
            }
        });

        jButton_Add_.setBackground(new java.awt.Color(0, 255, 0));
        jButton_Add_.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton_Add_.setForeground(new java.awt.Color(111, 13, 200));
        jButton_Add_.setIcon(new javax.swing.ImageIcon(getClass().getResource("/my_images/icons8-add-24.png"))); // NOI18N
        jButton_Add_.setText("Add");
        jButton_Add_.setContentAreaFilled(false);
        jButton_Add_.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_Add_.setOpaque(true);
        jButton_Add_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Add_ActionPerformed(evt);
            }
        });

        jButton_Edit_.setBackground(new java.awt.Color(0, 255, 0));
        jButton_Edit_.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton_Edit_.setForeground(new java.awt.Color(111, 13, 200));
        jButton_Edit_.setIcon(new javax.swing.ImageIcon(getClass().getResource("/my_images/icons8-update-24.png"))); // NOI18N
        jButton_Edit_.setText("Edit");
        jButton_Edit_.setContentAreaFilled(false);
        jButton_Edit_.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_Edit_.setOpaque(true);
        jButton_Edit_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Edit_ActionPerformed(evt);
            }
        });

        jButton_Delete_.setBackground(new java.awt.Color(255, 51, 51));
        jButton_Delete_.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton_Delete_.setForeground(new java.awt.Color(111, 13, 200));
        jButton_Delete_.setIcon(new javax.swing.ImageIcon(getClass().getResource("/my_images/icons8-delete-24.png"))); // NOI18N
        jButton_Delete_.setText("Delete");
        jButton_Delete_.setContentAreaFilled(false);
        jButton_Delete_.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_Delete_.setOpaque(true);
        jButton_Delete_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Delete_ActionPerformed(evt);
            }
        });

        jTable_Book_.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable_Book_.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_Book_MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable_Book_);

        jButton_FindById_.setBackground(new java.awt.Color(0, 255, 0));
        jButton_FindById_.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton_FindById_.setForeground(new java.awt.Color(111, 13, 200));
        jButton_FindById_.setIcon(new javax.swing.ImageIcon(getClass().getResource("/my_images/icons8-search-24.png"))); // NOI18N
        jButton_FindById_.setText("Find by Id");
        jButton_FindById_.setContentAreaFilled(false);
        jButton_FindById_.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_FindById_.setOpaque(true);
        jButton_FindById_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_FindById_ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Publisher:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Author Name:");

        txt_Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_NameActionPerformed(evt);
            }
        });

        txt_Publisher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_PublisherActionPerformed(evt);
            }
        });

        txt_PublishYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_PublishYearActionPerformed(evt);
            }
        });
        txt_PublishYear.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_PublishYearKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Publish Year:");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Genre:");

        combo_Genre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_GenreActionPerformed(evt);
            }
        });

        jButton_FindByName_.setBackground(new java.awt.Color(0, 255, 0));
        jButton_FindByName_.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton_FindByName_.setForeground(new java.awt.Color(111, 13, 200));
        jButton_FindByName_.setIcon(new javax.swing.ImageIcon(getClass().getResource("/my_images/icons8-search-24.png"))); // NOI18N
        jButton_FindByName_.setText("Find by Name");
        jButton_FindByName_.setContentAreaFilled(false);
        jButton_FindByName_.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_FindByName_.setOpaque(true);
        jButton_FindByName_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_FindByName_ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Quantity:");

        combo_Author.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_AuthorActionPerformed(evt);
            }
        });

        txt_Quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_QuantityActionPerformed(evt);
            }
        });
        txt_Quantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_QuantityKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_Id, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_Publisher, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(combo_Genre, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(63, 63, 63)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(combo_Author, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_PublishYear, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(189, 189, 189))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addComponent(jLabel7)
                        .addGap(63, 63, 63)
                        .addComponent(txt_Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel_FormTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_CloseForm, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jButton_Add_, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90)
                .addComponent(jButton_Edit_, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90)
                .addComponent(jButton_Delete_, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90)
                .addComponent(jButton_FindById_)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                .addComponent(jButton_FindByName_)
                .addGap(80, 80, 80))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel_FormTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel_CloseForm, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_Id, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo_Genre, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_Author, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Publisher, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_PublishYear, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_Add_)
                    .addComponent(jButton_Edit_)
                    .addComponent(jButton_Delete_)
                    .addComponent(jButton_FindById_)
                    .addComponent(jButton_FindByName_))
                .addGap(36, 36, 36)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel_CloseFormMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_CloseFormMouseClicked

        // Display DashboardForm
        DashboardForm dash_f = new DashboardForm();
        dash_f.setVisible(true);
        
        // close the form
        this.dispose();
    }//GEN-LAST:event_jLabel_CloseFormMouseClicked

    private void txt_IdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_IdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_IdActionPerformed

    public boolean isYear(JTextField txt_Field){
        String txtValue = txt_Field.getText().trim();
        String strPtn = "^\\d{4,4}$";
        if (!txtValue.matches(strPtn)) {
            return false;
        }
        return true;
    }
    
    public boolean isNumber(JTextField txt_Field){
        String txtValue = txt_Field.getText().trim();
        String strPtn = "^\\d{1,}$";
        if (!txtValue.matches(strPtn)) {
            return false;
        }
        return true;
    }
    private void jButton_Add_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Add_ActionPerformed
        // add new Use

        List<Category> listCate = new CategoryDAOImpl().getCategoryList();
        List<Author> listAuth = new AuthorDAOImpl().getListAuthor();
        String bookName = txt_Name.getText().trim();
        String publisher = txt_Publisher.getText().trim();
        String publishYear = txt_PublishYear.getText().trim();
        String quantity = txt_Quantity.getText().trim();
        Category cate = listCate.get(combo_Genre.getSelectedIndex());
        Author auth = listAuth.get(combo_Author.getSelectedIndex());
        int cateId = cate.getCateId();
        int authId = auth.getAuthorId();
        // check textfield empty or not
        if (bookName.isEmpty()) {
            JOptionPane.showMessageDialog(null, "This field cannot be empty", "User Name", 2);
        } else if (publisher.isEmpty()) {
            JOptionPane.showMessageDialog(null, "This field cannot be empty", "Publisher", 2);
        } else if (publishYear.isEmpty()) {
            JOptionPane.showMessageDialog(null, "This field cannot be empty", "Publish Year", 2);
        }else if (!isYear(txt_PublishYear)) {
            JOptionPane.showMessageDialog(null, "Publish year must be a year", "Publish Year", 2);
        }  else if (quantity.isEmpty()) {
            JOptionPane.showMessageDialog(null, "This field cannot be empty", "Quantity", 2);
        } else if (!isNumber(txt_Quantity)) {
            JOptionPane.showMessageDialog(null, "Quantity must be number", "Quantity", 2);
        }  else{
            //int year = Integer.parseInt(publishYear);
            if (Integer.parseInt(publishYear)<1900&&Integer.parseInt(publishYear)>2021) {
                JOptionPane.showMessageDialog(null, "Publish year must greatter than 1900 and less than 2021", "Publish Year", 2);
            }else{
                Book book = new Book();
                book.setName(bookName);
                book.setCateId(cateId);
                book.setAuthorId(authId);
                book.setPublisher(publisher);
                book.setPublishYear(Integer.parseInt(publishYear));
                book.setQuantity(Integer.parseInt(quantity));
                boolean bl = new BookDAOImpl().insertBook(book);
                if (bl) {
                    JOptionPane.showMessageDialog(this, "Insert successful");
                    
                    //refresh jtable_book
                    populateJTableWithBook();
                    
                    //clear text from textfield
                    txt_Id.setText("");
                    txt_Name.setText("");
                    txt_PublishYear.setText("");
                    txt_Publisher.setText("");
                    txt_Quantity.setText("");
//                    combo_Author.removeAllItems();
//                    combo_Genre.setSelectedIndex(-1);
                }
            }
        }
    }//GEN-LAST:event_jButton_Add_ActionPerformed

    private void jButton_Edit_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Edit_ActionPerformed
        // Edit card
        List<Category> listCate = new CategoryDAOImpl().getCategoryList();
        List<Author> listAuth = new AuthorDAOImpl().getListAuthor();
        String id = txt_Id.getText().trim();
        String bookName = txt_Name.getText().trim();
        String publisher = txt_Publisher.getText().trim();
        String publishYear = txt_PublishYear.getText().trim();
        String quantity = txt_Quantity.getText().trim();
        Category cate = listCate.get(combo_Genre.getSelectedIndex());
        Author auth = listAuth.get(combo_Author.getSelectedIndex());
        int cateId = cate.getCateId();
        int authId = auth.getAuthorId();
        // check textfield empty or not
        if (bookName.isEmpty()) {
            JOptionPane.showMessageDialog(null, "This field cannot be empty", "User Name", 2);
        } else if (publisher.isEmpty()) {
            JOptionPane.showMessageDialog(null, "This field cannot be empty", "Publisher", 2);
        } else if (publishYear.isEmpty()) {
            JOptionPane.showMessageDialog(null, "This field cannot be empty", "Publish Year", 2);
        }else if (!isNumber(txt_PublishYear)) {
            JOptionPane.showMessageDialog(null, "Publish year must be number", "Publish Year", 2);
        }  else if (quantity.isEmpty()) {
            JOptionPane.showMessageDialog(null, "This field cannot be empty", "Quantity", 2);
        } else if (!isNumber(txt_Quantity)) {
            JOptionPane.showMessageDialog(null, "Quantity must be number", "Quantity", 2);
        }  else{
            //int year = Integer.parseInt(publishYear);
            if (Integer.parseInt(publishYear)<1900&&Integer.parseInt(publishYear)>2021) {
                JOptionPane.showMessageDialog(null, "Publish year must greatter than 1900 and less than 2021", "Publish Year", 2);
            }else{
                int bookid = Integer.parseInt(id);
                Book book = new Book();
                book.setBookId(bookid);
                book.setName(bookName);
                book.setCateId(cateId);
                book.setAuthorId(authId);
                book.setPublisher(publisher);
                book.setPublishYear(Integer.parseInt(publishYear));
                book.setQuantity(Integer.parseInt(quantity));
                boolean bl = new BookDAOImpl().updateBook(book);
                if (bl) {
                    JOptionPane.showMessageDialog(this, "Update successful");
                    
                    //refresh jtable_book
                    populateJTableWithBook();
                    
                    //clear text from textfield
                    txt_Id.setText("");
                    txt_Name.setText("");
                    txt_PublishYear.setText("");
                    txt_Publisher.setText("");
                    txt_Quantity.setText("");
                    combo_Author.setSelectedIndex(-1);
                    combo_Genre.setSelectedIndex(-1);
                }
            }
        }
    }//GEN-LAST:event_jButton_Edit_ActionPerformed

    private void jButton_Delete_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Delete_ActionPerformed
        // TODO add your handling code here:
        try {
                int id = Integer.parseInt(txt_Id.getText());
                boolean bl = new BookDAOImpl().deleteBook(id);
                if (bl) {
                    JOptionPane.showMessageDialog(this, "Delete successful");
                    //refresh Jtable
                    populateJTableWithBook();
                }
            } catch (HeadlessException | NumberFormatException e) {
                JOptionPane.showConfirmDialog(this, "Invalid user id", "Error", 0);
            }
    }//GEN-LAST:event_jButton_Delete_ActionPerformed

    private void jTable_Book_MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_Book_MouseClicked
        // Display the selected LibraryCard
        int index =  jTable_Book_.getSelectedRow();
        //get values
        String id = jTable_Book_.getValueAt(index, 0).toString();
        String bookName = jTable_Book_.getValueAt(index, 1).toString();
        String cateName = jTable_Book_.getValueAt(index, 2).toString();
        String authName = jTable_Book_.getValueAt(index, 3).toString();
        String publisher = jTable_Book_.getValueAt(index, 4).toString();
        String publishYear = jTable_Book_.getValueAt(index, 5).toString();
        String quantity = jTable_Book_.getValueAt(index, 6).toString();
        //show data in textfield
        txt_Id.setText(id);
        SimpleDateFormat sf = new SimpleDateFormat("dd/MM/yyyy");
        txt_Id.setText(id);
        txt_Name.setText(bookName);
        combo_Genre.setSelectedItem(cateName);
        combo_Author.setSelectedItem(authName);
        txt_Publisher.setText(publisher);
        txt_PublishYear.setText(publishYear);
        txt_Quantity.setText(quantity);
    }//GEN-LAST:event_jTable_Book_MouseClicked

    private void jButton_FindById_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_FindById_ActionPerformed
        // TODO add your handling code here:
        String strId = JOptionPane.showInputDialog("Enter Id!");
        if (strId!=null && strId.length()>0) {
            try {
                int bookId = Integer.parseInt(strId);
                Book book = new BookDAOImpl().getBookById(bookId);
                if (book!=null) {
                    txt_Id.setText(book.getBookId()+"");
                    txt_Name.setText(book.getName()+"");
                    combo_Genre.setSelectedItem(book.getCateName());
                    combo_Author.setSelectedItem(book.getAuthName());
                    txt_Publisher.setText(book.getPublisher()+"");
                    txt_PublishYear.setText(book.getPublishYear()+"");
                    txt_Quantity.setText(book.getQuantity()+"");
                }else{
                    JOptionPane.showMessageDialog(this, "Invalid id "+strId, "Error", 0);
                }
            } catch (HeadlessException | NumberFormatException e) {
                JOptionPane.showConfirmDialog(this, e.getMessage());
            }
        }
    }//GEN-LAST:event_jButton_FindById_ActionPerformed

    private void jButton_FindByName_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_FindByName_ActionPerformed
        // TODO add your handling code here:
        String name = JOptionPane.showInputDialog("Enter Name");
        if (name!=null && name.length()>0) {
            List<Book> listBook = new BookDAOImpl().getBookByName(name);
            if (listBook==null || listBook.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Invalid Name "+name, "Error", 0);
            }else{
            //Jtable column
            String [] colNames = {"ID", "Book Name", "Genres", "Author", "Publisher", "Publish Year", "Quantity"};

            //rows
            Object[][] rows = new Object[listBook.size()][colNames.length];
            for (int i = 0; i < listBook.size(); i++) {
                rows[i][0] = listBook.get(i).getBookId();
                rows[i][1] = listBook.get(i).getName();
                rows[i][2] = listBook.get(i).getCateName();
                rows[i][3] = listBook.get(i).getAuthName();
                rows[i][4] = listBook.get(i).getPublisher();
                rows[i][5] = listBook.get(i).getPublishYear();
                rows[i][6] = listBook.get(i).getQuantity();
            }
            dftbl = new DefaultTableModel(rows, colNames);
            jTable_Book_.setModel(dftbl);
            }
        }
    }//GEN-LAST:event_jButton_FindByName_ActionPerformed

    private void txt_NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_NameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_NameActionPerformed

    private void txt_PublisherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_PublisherActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_PublisherActionPerformed

    private void combo_GenreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_GenreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_GenreActionPerformed

    private void combo_AuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_AuthorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_AuthorActionPerformed

    private void txt_PublishYearKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_PublishYearKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_PublishYearKeyPressed

    private void txt_PublishYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_PublishYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_PublishYearActionPerformed

    private void txt_QuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_QuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_QuantityActionPerformed

    private void txt_QuantityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_QuantityKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_QuantityKeyPressed
        
    //create a function to populate the jTable with Book
    public void populateJTableWithBook(){
        List<Author> listAuth = new AuthorDAOImpl().getListAuthor();
        List<Category> listCate = new CategoryDAOImpl().getCategoryList();
        List<Book> listBook = new BookDAOImpl().getListBook();
        
        //Jtable column
        String [] colNames = {"ID", "Book Name", "Genres", "Author", "Publisher", "Publish Year", "Quantity"};
        
        //Get data from database to JcomboBox
        DefaultComboBoxModel<String> cbmCate = (DefaultComboBoxModel<String>) combo_Genre.getModel();
        cbmCate.removeAllElements();
        for (Category cate : listCate) {
            cbmCate.addElement(cate.getName());
        }
        DefaultComboBoxModel<String> cbm = (DefaultComboBoxModel<String>) combo_Author.getModel();
        cbm.removeAllElements();
        for (Author auth : listAuth) {
            cbm.addElement(auth.getName());
        }
        
        //rows
        Object[][] rows = new Object[listBook.size()][colNames.length];
        for (int i = 0; i < listBook.size(); i++) {
            rows[i][0] = listBook.get(i).getBookId();
            rows[i][1] = listBook.get(i).getName();
            rows[i][2] = listBook.get(i).getCateName();
            rows[i][3] = listBook.get(i).getAuthName();
            rows[i][4] = listBook.get(i).getPublisher();
            rows[i][5] = listBook.get(i).getPublishYear();
            rows[i][6] = listBook.get(i).getQuantity();
        }
        dftbl = new DefaultTableModel(rows, colNames);
        jTable_Book_.setModel(dftbl);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    //javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
                    break;
                

}
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageBookForm.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        

} catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageBookForm.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        

} catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageBookForm.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        

} catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageBookForm.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageBookForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> combo_Author;
    private javax.swing.JComboBox<String> combo_Genre;
    private javax.swing.JButton jButton_Add_;
    private javax.swing.JButton jButton_Delete_;
    private javax.swing.JButton jButton_Edit_;
    private javax.swing.JButton jButton_FindById_;
    private javax.swing.JButton jButton_FindByName_;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel_CloseForm;
    private javax.swing.JLabel jLabel_FormTitle;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable_Book_;
    private javax.swing.JTextField txt_Id;
    private javax.swing.JTextField txt_Name;
    private javax.swing.JTextField txt_PublishYear;
    private javax.swing.JTextField txt_Publisher;
    private javax.swing.JTextField txt_Quantity;
    // End of variables declaration//GEN-END:variables
}
